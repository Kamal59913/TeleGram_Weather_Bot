{"ast":null,"code":"var _jsxFileName = \"E:\\\\signup\\\\front-end\\\\assignment_telegram_bot\\\\src\\\\Pages\\\\Inventory\\\\index.js\";\nimport React from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  const responseGoogle = async response => {\n    console.log(response);\n    // Handle the response here, for example, send the token to the backend\n    if (response && response.tokenId) {\n      try {\n        const tokenId = response.tokenId;\n        // Send the tokenId to your backend for verification\n        const backendResponse = await axios.post('http://localhost:5000/auth/google', {\n          tokenId\n        });\n        console.log('Received response from backend:', backendResponse.data);\n      } catch (error) {\n        console.error('Error sending tokenId to backend:', error);\n      }\n    } else {\n      // Handle error or missing tokenId\n      console.error('Invalid response or missing tokenId');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"YOUR_GOOGLE_CLIENT_ID\" // Replace with your Google Client ID\n      ,\n      buttonText: \"Login with Google\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      cookiePolicy: 'single_host_origin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","GoogleLogin","axios","Dashboard","responseGoogle","response","console","log","tokenId","backendResponse","post","data","error"],"sources":["E:/signup/front-end/assignment_telegram_bot/src/Pages/Inventory/index.js"],"sourcesContent":["import React from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport axios from 'axios';\n\nfunction Dashboard() {\n  const responseGoogle = async (response) => {\n    console.log(response);\n    // Handle the response here, for example, send the token to the backend\n    if (response && response.tokenId) {\n      try {\n        const tokenId = response.tokenId;\n        // Send the tokenId to your backend for verification\n        const backendResponse = await axios.post('http://localhost:5000/auth/google', { tokenId });\n        console.log('Received response from backend:', backendResponse.data);\n      } catch (error) {\n        console.error('Error sending tokenId to backend:', error);\n      }\n    } else {\n      // Handle error or missing tokenId\n      console.error('Invalid response or missing tokenId');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Welcome</h1>\n      <GoogleLogin\n        clientId=\"YOUR_GOOGLE_CLIENT_ID\" // Replace with your Google Client ID\n        buttonText=\"Login with Google\"\n        onSuccess={responseGoogle}\n        onFailure={responseGoogle}\n        cookiePolicy={'single_host_origin'}\n      />\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,SAAS,GAAG;EACnB,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;IACzCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB;IACA,IAAIA,QAAQ,IAAIA,QAAQ,CAACG,OAAO,EAAE;MAChC,IAAI;QACF,MAAMA,OAAO,GAAGH,QAAQ,CAACG,OAAO;QAChC;QACA,MAAMC,eAAe,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,mCAAmC,EAAE;UAAEF;QAAQ,CAAC,CAAC;QAC1FF,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEE,eAAe,CAACE,IAAI,CAAC;MACtE,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC,MAAM;MACL;MACAN,OAAO,CAACM,KAAK,CAAC,qCAAqC,CAAC;IACtD;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB,QAAC,WAAW;MACV,QAAQ,EAAC,uBAAuB,CAAC;MAAA;MACjC,UAAU,EAAC,mBAAmB;MAC9B,SAAS,EAAER,cAAe;MAC1B,SAAS,EAAEA,cAAe;MAC1B,YAAY,EAAE;IAAqB;MAAA;MAAA;MAAA;IAAA,QACnC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,KA/BQD,SAAS;AAiClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}