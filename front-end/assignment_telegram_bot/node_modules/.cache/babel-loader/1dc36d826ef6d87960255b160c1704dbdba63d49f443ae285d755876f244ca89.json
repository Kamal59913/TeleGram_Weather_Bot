{"ast":null,"code":"var _jsxFileName = \"E:\\\\signup\\\\front-end\\\\assignment_telegram_bot\\\\src\\\\Pages\\\\Inventory\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  useEffect(() => {\n    // Make an HTTP request to your NestJS endpoint\n    axios.get('http://your-nestjs-server/auth/google/callback').then(response => {\n      // Handle the response based on the status or data received\n      if (response.status === 200) {\n        window.location.href = response.data.redirectURL; // Redirect based on data received\n      } else {\n        // Handle other status codes or errors\n      }\n    }).catch(error => {\n      // Handle errors\n      console.error('Error:', error);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // Your React component JSX\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Dashboard;\nexport default Dashboard;\n\n// import GoogleButton from 'react-google-button'\n// function Dashboard() {\n//     const handleGoogleLogin = async () => {\n//       try {\n//         // Redirect to Google authentication endpoint on your backend\n//         window.location.href = 'http://localhost:5000/google'; // Replace with your actual endpoint\n//       } catch (error) {\n//         console.error('Error logging in with Google:', error);\n//       }\n//     };\n\n//     return (\n//       <div>\n//         <h1>Welcome</h1>\n//         <GoogleButton onClick={handleGoogleLogin}>Login with Google</GoogleButton>\n//       </div>\n//     );\n//   };\n\n// export default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","axios","Dashboard","get","then","response","status","window","location","href","data","redirectURL","catch","error","console"],"sources":["E:/signup/front-end/assignment_telegram_bot/src/Pages/Inventory/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\n\nconst Dashboard = () => {\n  useEffect(() => {\n    // Make an HTTP request to your NestJS endpoint\n    axios.get('http://your-nestjs-server/auth/google/callback')\n      .then(response => {\n        // Handle the response based on the status or data received\n        if (response.status === 200) {\n          window.location.href = response.data.redirectURL; // Redirect based on data received\n        } else {\n          // Handle other status codes or errors\n        }\n      })\n      .catch(error => {\n        // Handle errors\n        console.error('Error:', error);\n      });\n  }, []);\n\n  return (\n    // Your React component JSX\n    <div>\n      {/* Your component content */}\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n// import GoogleButton from 'react-google-button'\n// function Dashboard() {\n//     const handleGoogleLogin = async () => {\n//       try {\n//         // Redirect to Google authentication endpoint on your backend\n//         window.location.href = 'http://localhost:5000/google'; // Replace with your actual endpoint\n//       } catch (error) {\n//         console.error('Error logging in with Google:', error);\n//       }\n//     };\n  \n//     return (\n//       <div>\n//         <h1>Welcome</h1>\n//         <GoogleButton onClick={handleGoogleLogin}>Login with Google</GoogleButton>\n//       </div>\n//     );\n//   };\n    \n\n// export default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtBF,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACE,GAAG,CAAC,gDAAgD,CAAC,CACxDC,IAAI,CAACC,QAAQ,IAAI;MAChB;MACA,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAAC,CAAC;MACpD,CAAC,MAAM;QACL;MAAA;IAEJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN;IAAA;IACE;IACA;MAAA;MAAA;MAAA;IAAA;EAEM;AAEV,CAAC;AAAC,GAxBIX,SAAS;AAAA,KAATA,SAAS;AA0Bf,eAAeA,SAAS;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}