{"ast":null,"code":"var _jsxFileName = \"E:\\\\signup\\\\front-end\\\\assignment_telegram_bot\\\\src\\\\Pages\\\\AdminPanel\\\\adminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminPanel() {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // Function to fetch all users using Axios\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/users');\n        console.log(response.data);\n        setUsers(response.data); // Assuming the response contains user data\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n\n    // Call the fetchUsers function\n    fetchUsers();\n  }, []);\n  const blockUser = userId => {\n    console.log('Block user:', userId);\n    axios.put(`http://localhost:5000/users/${userId}/block`).then(response => {\n      console.log(response);\n      // Update the user list after deletion\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const deleteUser = userId => {\n    console.log('Delete user:', userId);\n    axios.delete(`http://localhost:5000/api/users/${userId}`).then(response => {\n      console.log(response);\n      // Update the user list after deletion\n      const updatedUsers = users.filter(user => user.tele_id !== userId);\n      setUsers(updatedUsers);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((user, userIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", user.tele_id, \" -- \", user.location, \" \", user.username, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteUser(user.tele_id),\n          children: \" Remove User \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => blockUser(user.tele_id),\n          children: \" Block User \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, userIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","axios","AdminPanel","users","setUsers","fetchUsers","response","get","console","log","data","error","blockUser","userId","put","then","catch","err","deleteUser","delete","updatedUsers","filter","user","tele_id","map","userIndex","location","username"],"sources":["E:/signup/front-end/assignment_telegram_bot/src/Pages/AdminPanel/adminPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function AdminPanel() {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Function to fetch all users using Axios\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/users');\r\n        console.log(response.data)\r\n        setUsers(response.data); // Assuming the response contains user data\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n      }\r\n    };\r\n\r\n    // Call the fetchUsers function\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const blockUser = (userId) => {\r\n    console.log('Block user:', userId);\r\n    axios.put(`http://localhost:5000/users/${userId}/block`).then((response) => {\r\n      console.log(response);\r\n      // Update the user list after deletion\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const deleteUser = (userId) => {\r\n    console.log('Delete user:', userId);\r\n    axios.delete(`http://localhost:5000/api/users/${userId}`).then((response) => {\r\n      console.log(response);\r\n      // Update the user list after deletion\r\n      const updatedUsers = users.filter((user) => user.tele_id !== userId);\r\n      setUsers(updatedUsers);\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Welcome to the Admin Panel</h1>\r\n      <h2>User List</h2>\r\n      <ul>\r\n        {users.map((user, userIndex) => (\r\n            <li key={userIndex}> {user.tele_id} -- {user.location} {user.username}  \r\n            <button onClick={() => deleteUser(user.tele_id)}> Remove User </button>\r\n            <button onClick={() => blockUser(user.tele_id)}> Block User </button>            \r\n</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,UAAU,GAAG;EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMM,UAAU,GAAG,YAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,iCAAiC,CAAC;QACnEC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;QAC1BN,QAAQ,CAACE,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;;IAED;IACAN,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,SAAS,GAAIC,MAAM,IAAK;IAC5BL,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEI,MAAM,CAAC;IAClCZ,KAAK,CAACa,GAAG,CAAE,+BAA8BD,MAAO,QAAO,CAAC,CAACE,IAAI,CAAET,QAAQ,IAAK;MAC1EE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB;IACF,CAAC,CAAC,CAACU,KAAK,CAAEC,GAAG,IAAK;MAChBT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,UAAU,GAAIL,MAAM,IAAK;IAC7BL,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEI,MAAM,CAAC;IACnCZ,KAAK,CAACkB,MAAM,CAAE,mCAAkCN,MAAO,EAAC,CAAC,CAACE,IAAI,CAAET,QAAQ,IAAK;MAC3EE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB;MACA,MAAMc,YAAY,GAAGjB,KAAK,CAACkB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAKV,MAAM,CAAC;MACpET,QAAQ,CAACgB,YAAY,CAAC;IACxB,CAAC,CAAC,CAACJ,KAAK,CAAEC,GAAG,IAAK;MAChBT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmC,eACnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAClB;MAAA,UACGd,KAAK,CAACqB,GAAG,CAAC,CAACF,IAAI,EAAEG,SAAS,kBACvB;QAAA,gBAAsBH,IAAI,CAACC,OAAO,UAAMD,IAAI,CAACI,QAAQ,OAAGJ,IAAI,CAACK,QAAQ,eACrE;UAAQ,OAAO,EAAE,MAAMT,UAAU,CAACI,IAAI,CAACC,OAAO,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB,eACvE;UAAQ,OAAO,EAAE,MAAMX,SAAS,CAACU,IAAI,CAACC,OAAO,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB;MAAA,GAF5DE,SAAS;QAAA;QAAA;QAAA;MAAA,QAIrB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GAvDuBvB,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}