{"ast":null,"code":"var _jsxFileName = \"E:\\\\signup\\\\front-end\\\\assignment_telegram_bot\\\\src\\\\Pages\\\\Inventory\\\\index.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  const handleGoogleLogin = () => {\n    try {\n      // Open a popup window for Google authentication\n      const popup = window.open('http://localhost:5000/google', 'Google Auth', 'width=600,height=600');\n      const checkPopupClosed = setInterval(() => {\n        if (!popup || popup.closed || popup.closed === undefined) {\n          clearInterval(checkPopupClosed);\n          // The popup is closed, do something after authentication completes\n          // For instance, you can check if the user is authenticated, then close the popup\n          // After the authentication is done, close the popup\n          // For demonstration purposes, assuming the authentication process sets a flag in localStorage\n          if (document.cookie) {\n            popup.close(); // Close the popup window\n          }\n        }\n      }, 1000); // Check every second if the popup is closed\n    } catch (error) {\n      console.error('Error logging in with Google:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Link","Cookies","Dashboard","handleGoogleLogin","popup","window","open","checkPopupClosed","setInterval","closed","undefined","clearInterval","document","cookie","close","error","console"],"sources":["E:/signup/front-end/assignment_telegram_bot/src/Pages/Inventory/index.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nfunction Dashboard() {\n  const handleGoogleLogin = () => {\n    try {\n      // Open a popup window for Google authentication\n      const popup = window.open('http://localhost:5000/google', 'Google Auth', 'width=600,height=600');\n\n      const checkPopupClosed = setInterval(() => {\n        if (!popup || popup.closed || popup.closed === undefined) {\n          clearInterval(checkPopupClosed);\n          // The popup is closed, do something after authentication completes\n          // For instance, you can check if the user is authenticated, then close the popup\n          // After the authentication is done, close the popup\n          // For demonstration purposes, assuming the authentication process sets a flag in localStorage\n          if (document.cookie) {\n            popup.close(); // Close the popup window\n          }\n        }\n      }, 1000); // Check every second if the popup is closed\n    } catch (error) {\n      console.error('Error logging in with Google:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Welcome</h1>\n      <button onClick={handleGoogleLogin}>Login with Google</button>\n\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,OAAO,MAAM,WAAW;AAAC;AAEhC,SAASC,SAAS,GAAG;EACnB,MAAMC,iBAAiB,GAAG,MAAM;IAC9B,IAAI;MACF;MACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAAC,8BAA8B,EAAE,aAAa,EAAE,sBAAsB,CAAC;MAEhG,MAAMC,gBAAgB,GAAGC,WAAW,CAAC,MAAM;QACzC,IAAI,CAACJ,KAAK,IAAIA,KAAK,CAACK,MAAM,IAAIL,KAAK,CAACK,MAAM,KAAKC,SAAS,EAAE;UACxDC,aAAa,CAACJ,gBAAgB,CAAC;UAC/B;UACA;UACA;UACA;UACA,IAAIK,QAAQ,CAACC,MAAM,EAAE;YACnBT,KAAK,CAACU,KAAK,EAAE,CAAC,CAAC;UACjB;QACF;MACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB;MAAQ,OAAO,EAAEZ,iBAAkB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B;EAAA;IAAA;IAAA;IAAA;EAAA,QAE1D;AAEV;AAAC,KA9BQD,SAAS;AAgClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}