{"ast":null,"code":"var _jsxFileName = \"E:\\\\signup\\\\front-end\\\\assignment_telegram_bot\\\\src\\\\Pages\\\\Inventory\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Home from '../Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const handleGoogleLogin = async () => {\n    try {\n      // Redirect to Google authentication endpoint on your backend\n      window.location.href = 'http://localhost:5000/google'; // Replace with your actual endpoint\n    } catch (error) {\n      console.error('Error logging in with Google:', error);\n    }\n  };\n  useEffect(() => {\n    // Check if there is a query parameter in the URL (callback from Google)\n    const urlParams = new URLSearchParams(window.location.search);\n    const googleCallback = urlParams.get('http://localhost:3000/inventory');\n    if (googleCallback === 'success') {\n      // If the callback is successful, navigate back to the previous page\n      navigate(-1); // This will navigate back to the previous page\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\n;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useNavigate","Cookies","BrowserRouter","Routes","Route","Home","Dashboard","navigate","handleGoogleLogin","window","location","href","error","console","urlParams","URLSearchParams","search","googleCallback","get"],"sources":["E:/signup/front-end/assignment_telegram_bot/src/Pages/Inventory/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Home from '../Home';\n\nfunction Dashboard() {\n  const navigate = useNavigate();\n\n  const handleGoogleLogin = async () => {\n    try {\n      // Redirect to Google authentication endpoint on your backend\n      window.location.href = 'http://localhost:5000/google'; // Replace with your actual endpoint\n    } catch (error) {\n      console.error('Error logging in with Google:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Check if there is a query parameter in the URL (callback from Google)\n    const urlParams = new URLSearchParams(window.location.search);\n    const googleCallback = urlParams.get('http://localhost:3000/inventory');\n\n    if (googleCallback === 'success') {\n      // If the callback is successful, navigate back to the previous page\n      navigate(-1); // This will navigate back to the previous page\n    }\n  }, [navigate]);\n\n  return (\n    <div>\n      <h1>Welcome</h1>\n      <button onClick={handleGoogleLogin}>Login with Google</button>\n\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,IAAI,MAAM,SAAS;AAAC;AAE3B,SAASC,SAAS,GAAG;EAAA;EACnB,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAE9B,MAAMQ,iBAAiB,GAAG,YAAY;IACpC,IAAI;MACF;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,8BAA8B,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,SAAS,GAAG,IAAIC,eAAe,CAACN,MAAM,CAACC,QAAQ,CAACM,MAAM,CAAC;IAC7D,MAAMC,cAAc,GAAGH,SAAS,CAACI,GAAG,CAAC,iCAAiC,CAAC;IAEvE,IAAID,cAAc,KAAK,SAAS,EAAE;MAChC;MACAV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB;MAAQ,OAAO,EAAEC,iBAAkB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B;EAAA;IAAA;IAAA;IAAA;EAAA,QAE1D;AAEV;AAAC,GA9BQF,SAAS;EAAA,QACCN,WAAW;AAAA;AAAA,KADrBM,SAAS;AA8BjB;AAED,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}