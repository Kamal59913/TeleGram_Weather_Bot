{"ast":null,"code":"var _jsxFileName = \"E:\\\\signup\\\\front-end\\\\assignment_telegram_bot\\\\src\\\\Pages\\\\Inventory\\\\index.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport GoogleButton from 'react-google-button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  const handleGoogleLogin = async response => {\n    try {\n      console.log(\"Hi\", response);\n      // Handle the response here, for example, send the token to the backend\n      if (response && response.tokenId) {\n        const tokenId = response.tokenId;\n        // Send the tokenId to your backend for verification\n        const backendResponse = await axios.post('http://localhost:5000/auth/google', {\n          tokenId\n        });\n        console.log('Received response from backend:', backendResponse.data);\n      } else {\n        // Handle error or missing tokenId\n        console.error('Invalid response or missing tokenId');\n      }\n    } catch (error) {\n      console.error('Error sending tokenId to backend:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleButton, {\n      onClick: handleGoogleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","axios","GoogleButton","Dashboard","handleGoogleLogin","response","console","log","tokenId","backendResponse","post","data","error"],"sources":["E:/signup/front-end/assignment_telegram_bot/src/Pages/Inventory/index.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport GoogleButton from 'react-google-button';\n\nfunction Dashboard() {\n  const handleGoogleLogin = async (response) => {\n    try {\n      console.log(\"Hi\",response);\n      // Handle the response here, for example, send the token to the backend\n      if (response && response.tokenId) {\n        const tokenId = response.tokenId;\n        // Send the tokenId to your backend for verification\n        const backendResponse = await axios.post('http://localhost:5000/auth/google', { tokenId });\n        console.log('Received response from backend:', backendResponse.data);\n      } else {\n        // Handle error or missing tokenId\n        console.error('Invalid response or missing tokenId');\n      }\n    } catch (error) {\n      console.error('Error sending tokenId to backend:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Welcome</h1>\n      <GoogleButton onClick={handleGoogleLogin} />\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAAC;AAE/C,SAASC,SAAS,GAAG;EACnB,MAAMC,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;IAC5C,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,IAAI,EAACF,QAAQ,CAAC;MAC1B;MACA,IAAIA,QAAQ,IAAIA,QAAQ,CAACG,OAAO,EAAE;QAChC,MAAMA,OAAO,GAAGH,QAAQ,CAACG,OAAO;QAChC;QACA,MAAMC,eAAe,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,mCAAmC,EAAE;UAAEF;QAAQ,CAAC,CAAC;QAC1FF,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEE,eAAe,CAACE,IAAI,CAAC;MACtE,CAAC,MAAM;QACL;QACAL,OAAO,CAACM,KAAK,CAAC,qCAAqC,CAAC;MACtD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB,QAAC,YAAY;MAAC,OAAO,EAAER;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACxC;AAEV;AAAC,KAzBQD,SAAS;AA2BlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}