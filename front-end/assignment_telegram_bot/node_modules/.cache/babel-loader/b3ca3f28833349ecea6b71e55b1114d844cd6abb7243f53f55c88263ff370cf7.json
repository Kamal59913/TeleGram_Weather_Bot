{"ast":null,"code":"var _jsxFileName = \"E:\\\\signup\\\\front-end\\\\assignment_telegram_bot\\\\src\\\\Pages\\\\AdminPanel\\\\adminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './admins.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminPanel() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [api, setApi] = useState('');\n  useEffect(() => {\n    // Function to fetch all users using Axios\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/users');\n        console.log(response.data);\n        setUsers(response.data); // Assuming the response contains user data\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n\n    // Call the fetchUsers function\n    fetchUsers();\n  }, []);\n  const blockUser = userId => {\n    console.log('Block user:', userId);\n    axios.put(`http://localhost:5000/api/users/block/${userId}`).then(response => {\n      console.log(response);\n      // Update the user list after deletion\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const deleteUser = userId => {\n    console.log('Delete user:', userId);\n    axios.delete(`http://localhost:5000/api/users/${userId}`).then(response => {\n      console.log(response);\n      // Update the user list after deletion\n      const updatedUsers = users.filter(user => user.tele_id !== userId);\n      setUsers(updatedUsers);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newChat = {\n      api: api\n    };\n    const objectId = \"658c1ac43b9561d7d764dddb\";\n    axios.put(`http://localhost:5000/api/updateApi/${objectId}`, newChat).then(response => {\n      console.log('User registered', response.data);\n    }).catch(error => {\n      console.error('Error registered user:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: users.map((user, userIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Chat Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 34\n        }, this), \" \", user.tele_id, \" -- \", user.location, \" \", user.username, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 99\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"admin-btn\",\n          onClick: () => deleteUser(user.tele_id),\n          children: \" Remove User \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), user.isBlocked == true ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"admin-btn\",\n          onClick: () => blockUser(user.tele_id),\n          children: \" Unblock User \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"admin-btn\",\n          onClick: () => blockUser(user.tele_id),\n          children: \" Block User \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, userIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fname\",\n        children: \"Replace Bot Api\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input_form\",\n        id: \"fname\",\n        name: \"fname\",\n        value: api,\n        onChange: e => setApi(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn_form\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"Z67uJevcd774M5XVOl+CT8FKei8=\");\n_c = AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","axios","AdminPanel","users","setUsers","api","setApi","fetchUsers","response","get","console","log","data","error","blockUser","userId","put","then","catch","err","deleteUser","delete","updatedUsers","filter","user","tele_id","handleSubmit","e","preventDefault","newChat","objectId","map","userIndex","location","username","isBlocked","target","value"],"sources":["E:/signup/front-end/assignment_telegram_bot/src/Pages/AdminPanel/adminPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './admins.css'\r\n\r\nexport default function AdminPanel() {\r\n  const [users, setUsers] = useState([]);\r\n  const [api, setApi] = useState('')\r\n\r\n  useEffect(() => {\r\n    // Function to fetch all users using Axios\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/users');\r\n        console.log(response.data)\r\n        setUsers(response.data); // Assuming the response contains user data\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n      }\r\n    };\r\n\r\n    // Call the fetchUsers function\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const blockUser = (userId) => {\r\n    console.log('Block user:', userId);\r\n    axios.put(`http://localhost:5000/api/users/block/${userId}`).then((response) => {\r\n      console.log(response);\r\n      // Update the user list after deletion\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const deleteUser = (userId) => {\r\n    console.log('Delete user:', userId);\r\n    axios.delete(`http://localhost:5000/api/users/${userId}`).then((response) => {\r\n      console.log(response);\r\n      // Update the user list after deletion\r\n      const updatedUsers = users.filter((user) => user.tele_id !== userId);\r\n      setUsers(updatedUsers);\r\n    }).catch((err) => {\r\n      console.log(err);\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newChat ={\r\n        api: api,\r\n    };\r\n    const objectId= \"658c1ac43b9561d7d764dddb\";\r\n    axios.put(`http://localhost:5000/api/updateApi/${objectId}`,newChat)\r\n    .then((response) => {\r\n        console.log('User registered',response.data)\r\n    })\r\n    .catch((error)=>{\r\n        console.error('Error registered user:', error)\r\n    })\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to the Admin Panel</h1>\r\n      <ol>\r\n        {users.map((user, userIndex) => (\r\n            <li key={userIndex}> <b>Chat Id</b> {user.tele_id} -- {user.location} {user.username} <br/>\r\n              <button className=\"admin-btn\" onClick={() => deleteUser(user.tele_id)}> Remove User </button>\r\n              {user.isBlocked == true ? (\r\n            <button className=\"admin-btn\" onClick={() => blockUser(user.tele_id)}> Unblock User </button>\r\n          ) : (\r\n            <button className=\"admin-btn\" onClick={() => blockUser(user.tele_id)}> Block User </button>\r\n          )}\r\n</li> \r\n        ))} \r\n      </ol>\r\n      <form onSubmit={handleSubmit}>\r\n             <label htmlFor=\"fname\">Replace Bot Api</label>\r\n             <input type=\"text\" className=\"input_form\" id=\"fname\" name=\"fname\" \r\n             value={api}\r\n             onChange={(e)=> setApi(e.target.value)}/>\r\n             <input type=\"submit\" className=\"btn_form\" value=\"Send\"/>\r\n        </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}