{"ast":null,"code":"var _jsxFileName = \"E:\\\\signup\\\\front-end\\\\assignment_telegram_bot\\\\src\\\\Pages\\\\Inventory\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport GoogleButton from 'react-google-button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  var _s = $RefreshSig$();\n  const handleGoogleLogin = async () => {\n    try {\n      // Redirect to Google authentication endpoint on your backend\n      window.location.href = 'http://localhost:5000/google'; // Replace with your actual endpoint\n    } catch (error) {\n      console.error('Error logging in with Google:', error);\n    }\n  };\n  function Dashboard() {\n    _s();\n    useEffect(() => {\n      // Function to extract token from URL query parameters\n      const getTokenFromURL = () => {\n        const searchParams = new URLSearchParams(window.location.search);\n        const token = searchParams.get('token');\n        if (token) {\n          // Do something with the token here (e.g., store it in state or perform an action)\n          console.log('Token:', token);\n        } else {\n          console.log('Token not found in URL');\n        }\n      };\n      getTokenFromURL();\n    }, []);\n  }\n  _s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GoogleButton, {\n      onClick: handleGoogleLogin,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n_c = Dashboard;\n;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","GoogleButton","Dashboard","handleGoogleLogin","window","location","href","error","console","getTokenFromURL","searchParams","URLSearchParams","search","token","get","log"],"sources":["E:/signup/front-end/assignment_telegram_bot/src/Pages/Inventory/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport GoogleButton from 'react-google-button'\nfunction Dashboard() {\n    const handleGoogleLogin = async () => {\n      try {\n        // Redirect to Google authentication endpoint on your backend\n        window.location.href = 'http://localhost:5000/google'; // Replace with your actual endpoint\n      } catch (error) {\n        console.error('Error logging in with Google:', error);\n      }\n    };\n    function Dashboard() {\n      useEffect(() => {\n        // Function to extract token from URL query parameters\n        const getTokenFromURL = () => {\n          const searchParams = new URLSearchParams(window.location.search);\n          const token = searchParams.get('token');\n          \n          if (token) {\n            // Do something with the token here (e.g., store it in state or perform an action)\n            console.log('Token:', token);\n          } else {\n            console.log('Token not found in URL');\n          }\n        };\n    \n        getTokenFromURL();\n      }, []);\n    }\n    return (\n      <div>\n        <h1>Welcome</h1>\n        <GoogleButton onClick={handleGoogleLogin}>Login with Google</GoogleButton>\n      </div>\n    );\n  };\n    \n\nexport default Dashboard;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAOC,YAAY,MAAM,qBAAqB;AAAA;AAC9C,SAASC,SAAS,GAAG;EAAA;EACjB,MAAMC,iBAAiB,GAAG,YAAY;IACpC,IAAI;MACF;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,8BAA8B,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EACD,SAASL,SAAS,GAAG;IAAA;IACnBF,SAAS,CAAC,MAAM;MACd;MACA,MAAMS,eAAe,GAAG,MAAM;QAC5B,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAACP,MAAM,CAACC,QAAQ,CAACO,MAAM,CAAC;QAChE,MAAMC,KAAK,GAAGH,YAAY,CAACI,GAAG,CAAC,OAAO,CAAC;QAEvC,IAAID,KAAK,EAAE;UACT;UACAL,OAAO,CAACO,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;QAC9B,CAAC,MAAM;UACLL,OAAO,CAACO,GAAG,CAAC,wBAAwB,CAAC;QACvC;MACF,CAAC;MAEDN,eAAe,EAAE;IACnB,CAAC,EAAE,EAAE,CAAC;EACR;EAAC,GAjBQP,SAAS;EAkBlB,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB,QAAC,YAAY;MAAC,OAAO,EAAEC,iBAAkB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiC;EAAA;IAAA;IAAA;IAAA;EAAA,QACtE;AAEV;AAAC,KAjCMD,SAAS;AAiCf;AAGH,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}