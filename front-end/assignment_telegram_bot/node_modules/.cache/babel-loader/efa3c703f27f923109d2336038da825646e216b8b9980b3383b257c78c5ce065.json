{"ast":null,"code":"var _jsxFileName = \"E:\\\\signup\\\\front-end\\\\assignment_telegram_bot\\\\src\\\\Pages\\\\Inventory\\\\index.js\";\nimport axios from 'axios';\nimport GoogleButton from 'react-google-button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  const handleGoogleLogin = async () => {\n    try {\n      // Redirect to Google authentication endpoint on your backend\n      window.location.href = 'http://localhost:5000/google'; // Replace with your actual endpoint\n    } catch (error) {\n      console.error('Error logging in with Google:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n      clientId: \"1028953907365-4bh5l4c74dinjmur0klu663p1kbdfhdg.apps.googleusercontent.com\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {\n          useOneTap: true,\n          onSuccess: async credentialResponse => {\n            const response = await axios.post('http://localhost:3001/login', {\n              token: credentialResponse.credential\n            });\n            const data = response.data;\n            localStorage.setItem('authData', JSON.stringify(data));\n            setAuthData(data);\n          },\n          onError: () => {\n            console.log('Login Failed');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 19\n        }, this), \"l        \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 11\n  }, this);\n}\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["axios","GoogleButton","Dashboard","handleGoogleLogin","window","location","href","error","console","credentialResponse","response","post","token","credential","data","localStorage","setItem","JSON","stringify","setAuthData","log"],"sources":["E:/signup/front-end/assignment_telegram_bot/src/Pages/Inventory/index.js"],"sourcesContent":["  import axios from 'axios';\n  import GoogleButton from 'react-google-button'\n  function Dashboard() {\n      const handleGoogleLogin = async () => {\n        try {\n          // Redirect to Google authentication endpoint on your backend\n          window.location.href = 'http://localhost:5000/google'; // Replace with your actual endpoint\n        } catch (error) {\n          console.error('Error logging in with Google:', error);\n        }\n      };\n    \n      \n        return (\n          <div className='App'>\n            <GoogleOAuthProvider clientId='1028953907365-4bh5l4c74dinjmur0klu663p1kbdfhdg.apps.googleusercontent.com'>\n              <div>\n                  <GoogleLogin\n                    useOneTap\n                    onSuccess={async (credentialResponse) => {\n                      const response = await axios.post(\n                        'http://localhost:3001/login',\n                        {\n                          token: credentialResponse.credential,\n                        }\n                      );\n                      const data = response.data;\n      \n                      localStorage.setItem('authData', JSON.stringify(data));\n                      setAuthData(data);\n                    }}\n                    onError={() => {\n                      console.log('Login Failed');\n                    }}\n                  />\n      l        </div>\n      \n              <Profile />\n            </GoogleOAuthProvider>\n          </div>\n        );\n      }\n    \n      \n\n  export default Dashboard;\n"],"mappings":";AAAE,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAAA;AAC9C,SAASC,SAAS,GAAG;EACjB,MAAMC,iBAAiB,GAAG,YAAY;IACpC,IAAI;MACF;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,8BAA8B,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAGC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,mBAAmB;MAAC,QAAQ,EAAC,2EAA2E;MAAA,wBACvG;QAAA,wBACI,QAAC,WAAW;UACV,SAAS;UACT,SAAS,EAAE,MAAOE,kBAAkB,IAAK;YACvC,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAC/B,6BAA6B,EAC7B;cACEC,KAAK,EAAEH,kBAAkB,CAACI;YAC5B,CAAC,CACF;YACD,MAAMC,IAAI,GAAGJ,QAAQ,CAACI,IAAI;YAE1BC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;YACtDK,WAAW,CAACL,IAAI,CAAC;UACnB,CAAE;UACF,OAAO,EAAE,MAAM;YACbN,OAAO,CAACY,GAAG,CAAC,cAAc,CAAC;UAC7B;QAAE;UAAA;UAAA;UAAA;QAAA,QACF;MAAA;QAAA;QAAA;QAAA;MAAA,QACC,eAEP,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACS;IAAA;IAAA;IAAA;EAAA,QAClB;AAEV;AAAC,KAvCIlB,SAAS;AA2ClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}