{"ast":null,"code":"var _jsxFileName = \"E:\\\\signup\\\\front-end\\\\assignment_telegram_bot\\\\src\\\\Pages\\\\WeatherPage\\\\index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { Card, Space, Statistic, Table, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { getCustomers, getInventory, getOrders, getRevenue } from \"../../API\";\nimport Weathercard from \"./Weathercard\";\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WeatherPage() {\n  _s();\n  const [searchValue, setSearchValue] = useState(\"sibsagar\");\n  const [tempInfo, setTempInfo] = useState({}); //empty array passsing initially\n  //for the first time by default it should get something\n  const getWeatherInfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=75b31160e847eff782e127fda7c5665e`;\n      const res = await fetch(url);\n      const data = await res.json();\n      const {\n        temp,\n        humidity,\n        pressure\n      } = data.main;\n      console.log(temp);\n      console.log(humidity);\n      console.log(pressure);\n      const {\n        main: weathermood\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunset\n      } = data.sys;\n      //object creating out of weather properties\n      const myNewWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weathermood,\n        name,\n        speed,\n        country,\n        sunset\n      };\n      setTempInfo(myNewWeatherInfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  //automatic function call just after refreshing the page is can be done by useEffect hook\n  useEffect(() => {\n    getWeatherInfo();\n  }, []); //passing an empty array that means value reflects on the only very first time the page is refreshed\n\n  return /*#__PURE__*/_jsxDEV(Space, {\n    size: 20,\n    direction: \"vertical\",\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      direction: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"search...\",\n            autoFocus: true,\n            id: \"search\",\n            className: \"searchTerm\",\n            value: searchValue,\n            onChange: e => setSearchValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"searchButton\",\n            type: \"button\",\n            onClick: getWeatherInfo,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Weathercard, {\n        tempinfo: tempInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherPage, \"WHqFZGd8KYRB+zl8x+dC3JpROy4=\");\n_c = WeatherPage;\nfunction DashboardCard(_ref) {\n  let {\n    title,\n    value,\n    icon\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Space, {\n      direction: \"horizontal\",\n      children: [icon, /*#__PURE__*/_jsxDEV(Statistic, {\n        title: title,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_c2 = DashboardCard;\nfunction RecentOrders() {\n  _s2();\n  const [dataSource, setDataSource] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    getOrders().then(res => {\n      setDataSource(res.products.splice(0, 3));\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography.Text, {\n      children: \"Recent Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: [{\n        title: \"Title\",\n        dataIndex: \"title\"\n      }, {\n        title: \"Quantity\",\n        dataIndex: \"quantity\"\n      }, {\n        title: \"Price\",\n        dataIndex: \"discountedPrice\"\n      }],\n      loading: loading,\n      dataSource: dataSource,\n      pagination: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(RecentOrders, \"vv2ALb4ray27pPVb0sTdL5QdlPk=\");\n_c3 = RecentOrders;\nfunction DashboardChart() {\n  _s3();\n  const [reveneuData, setReveneuData] = useState({\n    labels: [],\n    datasets: []\n  });\n  useEffect(() => {\n    getRevenue().then(res => {\n      const labels = res.carts.map(cart => {\n        return `User-${cart.userId}`;\n      });\n      const data = res.carts.map(cart => {\n        return cart.discountedTotal;\n      });\n      const dataSource = {\n        labels,\n        datasets: [{\n          label: \"Revenue\",\n          data: data,\n          backgroundColor: \"rgba(255, 0, 0, 1)\"\n        }]\n      };\n      setReveneuData(dataSource);\n    });\n  }, []);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"bottom\"\n      },\n      title: {\n        display: true,\n        text: \"Order Revenue\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: 500,\n      height: 250\n    },\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: reveneuData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s3(DashboardChart, \"D55bwh3T/tJ9mgfMXumiuj99hEI=\");\n_c4 = DashboardChart;\nexport default WeatherPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"WeatherPage\");\n$RefreshReg$(_c2, \"DashboardCard\");\n$RefreshReg$(_c3, \"RecentOrders\");\n$RefreshReg$(_c4, \"DashboardChart\");","map":{"version":3,"names":["Card","Space","Statistic","Table","Typography","useEffect","useState","getCustomers","getInventory","getOrders","getRevenue","Weathercard","WeatherPage","searchValue","setSearchValue","tempInfo","setTempInfo","getWeatherInfo","url","res","fetch","data","json","temp","humidity","pressure","main","console","log","weathermood","weather","name","speed","wind","country","sunset","sys","myNewWeatherInfo","error","e","target","value","DashboardCard","title","icon","RecentOrders","dataSource","setDataSource","loading","setLoading","then","products","splice","dataIndex","DashboardChart","reveneuData","setReveneuData","labels","datasets","carts","map","cart","userId","discountedTotal","label","backgroundColor","options","responsive","plugins","legend","position","display","text","width","height"],"sources":["E:/signup/front-end/assignment_telegram_bot/src/Pages/WeatherPage/index.js"],"sourcesContent":["import { Card, Space, Statistic, Table, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { getCustomers, getInventory, getOrders, getRevenue } from \"../../API\";\nimport Weathercard from \"./Weathercard\";\nimport './app.css'\n\nfunction WeatherPage() {\n  const [searchValue,setSearchValue]= useState(\"sibsagar\");\n  const [tempInfo, setTempInfo] = useState({}); //empty array passsing initially\n  //for the first time by default it should get something\n  const getWeatherInfo = async()=> {\n      try{\n          let url=`https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=75b31160e847eff782e127fda7c5665e`;\n          const res= await fetch(url);\n          const data= await res.json();\n\n          const {temp,humidity,pressure} =data.main;\n          console.log(temp);\n          console.log(humidity);\n          console.log(pressure);\n          const {main:weathermood}=data.weather[0];\n          const {name} =data;\n          const {speed} =data.wind;\n          const {country,sunset} =data.sys; \n          //object creating out of weather properties\n          const myNewWeatherInfo ={\n              temp, humidity, pressure, weathermood, name, speed, country, sunset\n          };\n          setTempInfo(myNewWeatherInfo);\n      }catch(error){\n          console.log(error);\n      }\n  };\n  //automatic function call just after refreshing the page is can be done by useEffect hook\n  useEffect(() => {getWeatherInfo()}, []);//passing an empty array that means value reflects on the only very first time the page is refreshed\n\n  return (\n    <Space size={20} direction=\"vertical\">\n      <Space direction=\"horizontal\">\n      <div className=\"wrap\">\n      <div className=\"search\">\n        <input\n          type=\"search\"\n          placeholder=\"search...\"\n          autoFocus\n          id=\"search\"\n          className=\"searchTerm\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n        />\n\n        <button\n          className=\"searchButton\"\n          type=\"button\"\n          onClick={getWeatherInfo}\n          >\n          Search\n        </button>\n      </div>\n      </div>\n\n     <Weathercard tempinfo={tempInfo}/>\n  \n      </Space>\n    </Space>\n  );\n}\n\nfunction DashboardCard({ title, value, icon }) {\n  return (\n    <Card>\n      <Space direction=\"horizontal\">\n        {icon}\n        <Statistic title={title} value={value} />\n      </Space>\n    </Card>\n  );\n}\nfunction RecentOrders() {\n  const [dataSource, setDataSource] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getOrders().then((res) => {\n      setDataSource(res.products.splice(0, 3));\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <>\n      <Typography.Text>Recent Orders</Typography.Text>\n      <Table\n        columns={[\n          {\n            title: \"Title\",\n            dataIndex: \"title\",\n          },\n          {\n            title: \"Quantity\",\n            dataIndex: \"quantity\",\n          },\n          {\n            title: \"Price\",\n            dataIndex: \"discountedPrice\",\n          },\n        ]}\n        loading={loading}\n        dataSource={dataSource}\n        pagination={false}\n      ></Table>\n    </>\n  );\n}\n\nfunction DashboardChart() {\n  const [reveneuData, setReveneuData] = useState({\n    labels: [],\n    datasets: [],\n  });\n\n  useEffect(() => {\n    getRevenue().then((res) => {\n      const labels = res.carts.map((cart) => {\n        return `User-${cart.userId}`;\n      });\n      const data = res.carts.map((cart) => {\n        return cart.discountedTotal;\n      });\n\n      const dataSource = {\n        labels,\n        datasets: [\n          {\n            label: \"Revenue\",\n            data: data,\n            backgroundColor: \"rgba(255, 0, 0, 1)\",\n          },\n        ],\n      };\n\n      setReveneuData(dataSource);\n    });\n  }, []);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"bottom\",\n      },\n      title: {\n        display: true,\n        text: \"Order Revenue\",\n      },\n    },\n  };\n\n  return (\n    <Card style={{ width: 500, height: 250 }}>\n      <Bar options={options} data={reveneuData} />\n    </Card>\n  );\n}\nexport default WeatherPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}